---
	layout: "layouts/home.njk"
---

<template>
	<p>
		Design first two headings similar to boxes with details on https://ta-nehisicoates.com/events/
	</p>

	<p>Boxes will link to Event posts, all under the category of "events" "reading" "readings" or "appearances".</p>

	<p>Left-aligned photo at top:</p>

	<p>Shades crop</p>

	<p>Caption: Shades and Shadows Reading, 2017. Photo credit: One More Bites Blog</p>

</template>

<figure>
	<img src="https://d602mxa74hbsi.cloudfront.net/shades+crop.JPG" alt="Shades and Shadows Reading, 2017. Photo credit: One More Bites Blog" />
	<figcaption>Shades and Shadows Reading, 2017. Photo credit: One More Bites Blog</figcaption>
</figure>

<h1 id="upcoming-header" style="display: none">Upcoming</h1>
<ul class="events" id="upcoming-list" style="display: none"></ul>

<template>
Note: this heading disappears when none are upcoming.

Boxes should include the month, day, and year as H2, then  the event title as H3, and the location as H4. Left-align featured images within each box. Clicking the box leads to the individual post.
</template>


<h1 style="display: none" id="past-header">Past</h1>
<ul class="events" style="display: none" id="past-list"></ul>

<template>
Note: same format as above boxes. List events in reserve chronological order, including the ten most recent. Include a "See Older Events" link to a search that includes all Posts categorized as "events" "reading" "readings" or "appearances"
</template>

<h1>Recorded Appearances</h1>
<ul class="events">

{% for post in collections['events-recorded'] | head(-10, true) %}
	<li>
		<img src="{{ post.data.coverImage }}" />
		<div>
			<h2>{{ post.date | eventTime }}</h2>
			<h3>{{ post.data.title }}</h3>
			<h4>{{ post.data.location }}</h4>
			<h4>{{ post.data.city }}</h4>
			<p><a href="{{ post.url }}">More info...</a></p>
		</div>
	</li>
	{% endfor %}
</ul>

<p><a href="./allevents/">See older events...</a></p>


<script>

const renderHTML = post => {
	return `<li><img src="${post.image}" /><div>
		<h2>${formatDate(post.date)}</h2>
		<h2>${post.time}</h2>
		<h3>${post.title}</h3>
		<h4>${post.location}</h4>
		<h4>${post.city}</h4>
		<p><a href="${post.url}">More info...</a></p></div></li>`;
}

const formatDate = dateString => {
		const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
		return `${months[new Date(dateString).getUTCMonth()]} ${new Date(dateString).getUTCDate()}, ${new Date(dateString).getUTCFullYear()}`;
}

fetch('./events.json')
	.then(response => response.json())
	.then(data => {
		const upcoming = data.posts.filter(post => new Date(post.date) >= new Date());
		const past = data.posts.filter(post => new Date(post.date) < new Date());

		if (upcoming.length > 0) {
			let upcomingHTML = '';
			upcoming.sort( (a, b) => { return new Date(b.date) - new Date(a.date) }).slice(0,5).forEach(post => {
				upcomingHTML += renderHTML(post);
			});
			document.getElementById('upcoming-list').innerHTML = upcomingHTML;
			document.getElementById('upcoming-header').style.display = 'flex';
			document.getElementById('upcoming-list').style.display = 'flex';
		}

		if (past.length > 0) {
			let pastHTML = '';
			past.sort( (a, b) => { return new Date(b.date) - new Date(a.date) }).slice(0,5).forEach(post => {
				pastHTML += renderHTML(post);
			});
			document.getElementById('past-list').innerHTML = pastHTML;
			document.getElementById('past-header').style.display = 'flex';
			document.getElementById('past-list').style.display = 'flex';
		}
	});
</script>
